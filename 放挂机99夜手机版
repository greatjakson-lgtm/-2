-- 99 Nights 反挂机脚本 (无UI版) - 手机端兼容
local AntiAFK = {}

-- 检测平台类型
function AntiAFK:IsMobile()
    return game:GetService("UserInputService").TouchEnabled
end

-- 模拟手机端活动
function AntiAFK:SimulateMobileActivity()
    local virtualInput = game:GetService("VirtualInputManager")
    local screenSize = workspace.CurrentCamera.ViewportSize
    
    if self:IsMobile() then
        -- 手机端模拟触摸操作
        local touchPositions = {
            Vector2.new(math.random(50, screenSize.X - 50), math.random(50, screenSize.Y - 50)),
            Vector2.new(math.random(50, screenSize.X - 50), math.random(50, screenSize.Y - 50))
        }
        
        -- 模拟触摸开始
        virtualInput:SendTouchEvent(1, Enum.UserInputState.Begin, touchPositions[1], nil, nil, nil)
        task.wait(0.1)
        
        -- 模拟触摸移动
        virtualInput:SendTouchEvent(1, Enum.UserInputState.Change, touchPositions[2], nil, nil, nil)
        task.wait(0.1)
        
        -- 模拟触摸结束
        virtualInput:SendTouchEvent(1, Enum.UserInputState.End, touchPositions[2], nil, nil, nil)
        
    else
        -- PC端模拟鼠标移动
        virtualInput:SendMouseMoveEvent(
            math.random(0, screenSize.X),
            math.random(0, screenSize.Y),
            game:GetService("Players").LocalPlayer:GetMouse().TargetFilter
        )
    end
end

-- 模拟按键操作 (手机和PC都适用)
function AntiAFK:SimulateKeyPress()
    local virtualInput = game:GetService("VirtualInputManager")
    local movementKeys = {Enum.KeyCode.W, Enum.KeyCode.A, Enum.KeyCode.S, Enum.KeyCode.D, Enum.KeyCode.Space}
    local randomKey = movementKeys[math.random(1, #movementKeys)]
    
    -- 按下和释放按键
    virtualInput:SendKeyEvent(true, randomKey, false, nil)
    task.wait(0.05)
    virtualInput:SendKeyEvent(false, randomKey, false, nil)
end

-- 虚拟摇杆移动 (手机端专用)
function AntiAFK:SimulateJoystick()
    if not self:IsMobile() then return end
    
    local virtualInput = game:GetService("VirtualInputManager")
    local directions = {
        Vector2.new(0, 1),   -- 前
        Vector2.new(0, -1),  -- 后
        Vector2.new(1, 0),   -- 右
        Vector2.new(-1, 0)   -- 左
    }
    
    local randomDir = directions[math.random(1, #directions)]
    
    -- 模拟摇杆输入
    virtualInput:SendKeyEvent(true, Enum.KeyCode.Thumbstick1, false, nil)
    task.wait(0.1)
    virtualInput:SendKeyEvent(false, Enum.KeyCode.Thumbstick1, false, nil)
end

-- 检测玩家状态
function AntiAFK:CheckPlayerState()
    local player = game:GetService("Players").LocalPlayer
    if not player then return false end
    
    local character = player.Character
    if not character then return false end
    
    if character:FindFirstChild("Humanoid") then
        local humanoid = character.Humanoid
        return humanoid.Health > 0
    end
    
    return false
end

-- 主循环
function AntiAFK:Start()
    print("99 Nights 反挂机脚本已启动 - " .. (self:IsMobile() and "手机端" or "PC端"))
    
    while task.wait(math.random(30, 45)) do -- 延长间隔时间，更安全
        if not self:CheckPlayerState() then
            print("玩家状态异常，暂停反挂机")
            task.wait(10)
            continue
        end
        
        -- 执行模拟活动
        self:SimulateMobileActivity()
        
        -- 随机执行按键操作
        if math.random(1, 3) == 1 then
            self:SimulateKeyPress()
        end
        
        -- 手机端额外模拟摇杆
        if self:IsMobile() and math.random(1, 4) == 1 then
            self:SimulateJoystick()
        end
        
        print("执行反挂机操作: " .. os.date("%H:%M:%S"))
    end
end

-- 自动启动
task.spawn(function()
    local success, err = pcall(function()
        AntiAFK:Start()
    end)
    
    if not success then
        warn("反挂机脚本错误: " .. tostring(err))
    end
end)

return AntiAFK
