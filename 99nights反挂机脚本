-- 99 Nights 反挂机脚本 (无UI版)
local AntiAFK = {}

-- 模拟用户活动
function AntiAFK:SimulateActivity()
    -- 模拟鼠标移动
    local virtualInput = game:GetService("VirtualInputManager")
    local screenSize = workspace.CurrentCamera.ViewportSize
    
    -- 在屏幕范围内随机移动鼠标
    virtualInput:SendMouseMoveEvent(
        math.random(0, screenSize.X),
        math.random(0, screenSize.Y),
        game:GetService("Players").LocalPlayer:GetMouse().TargetFilter
    )
    
    -- 随机按下键盘按键 (空格键)
    if math.random(1, 10) == 1 then
        virtualInput:SendKeyEvent(true, Enum.KeyCode.Space, false, nil)
        task.wait(0.1)
        virtualInput:SendKeyEvent(false, Enum.KeyCode.Space, false, nil)
    end
    
    -- 随机按下WASD键
    local movementKeys = {Enum.KeyCode.W, Enum.KeyCode.A, Enum.KeyCode.S, Enum.KeyCode.D}
    local randomKey = movementKeys[math.random(1, #movementKeys)]
    
    virtualInput:SendKeyEvent(true, randomKey, false, nil)
    task.wait(0.05)
    virtualInput:SendKeyEvent(false, randomKey, false, nil)
end

-- 检测玩家状态
function AntiAFK:CheckPlayerState()
    local player = game:GetService("Players").LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    
    -- 检查角色是否存活
    if character:FindFirstChild("Humanoid") then
        local humanoid = character.Humanoid
        if humanoid.Health <= 0 then
            return false
        end
    end
    
    return true
end

-- 主循环
function AntiAFK:Start()
    print("99 Nights 反挂机脚本已启动")
    
    while task.wait(math.random(25, 35)) do -- 随机间隔25-35秒
        if not self:CheckPlayerState() then
            print("玩家状态异常，暂停反挂机")
            task.wait(5)
            continue
        end
        
        -- 执行模拟活动
        self:SimulateActivity()
        print("执行反挂机操作: " .. os.date("%H:%M:%S"))
    end
end

-- 自动启动
task.spawn(function()
    AntiAFK:Start()
end)

return AntiAFK
