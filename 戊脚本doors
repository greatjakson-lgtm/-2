local WindUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/Footagesus/WindUI/main/dist/main.lua"))()

local Confirmed = false

WindUI:Popup({
    Title = "Doors 辅助脚本",
    Icon = "rbxassetid://129260712070622",
    IconThemed = true,
    Content = "Doors多功能辅助工具\n包含透视、模型高亮、自动互动、速度修改等功能",
    Buttons = {
        {
            Title = "进入脚本",
            Icon = "arrow-right",
            Callback = function() Confirmed = true end,
            Variant = "Primary",
        }
    }
})

repeat task.wait() until Confirmed

local Window = WindUI:CreateWindow({
    Title = "Doors 辅助工具",
    Icon = "rbxassetid://129260712070622",
    IconThemed = true,
    Author = "多功能脚本",
    Folder = "DoorsScript",
    Size = UDim2.fromOffset(420, 320),
    Transparent = true,
    Theme = "Dark",
    User = { Enabled = true },
    SideBarWidth = 200,
    ScrollBarEnabled = true,
})

Window:Tag({ Title = "v6.5", Color = Color3.fromRGB(48, 255, 106) })
Window:Tag({ Title = "Doors", Color = Color3.fromRGB(49, 93, 255) })

local Tabs = {
    Main  = Window:Tab({ Title = "主要功能", Icon = "zap" }),
    ESP   = Window:Tab({ Title = "透视功能", Icon = "eye" }),
    Colors= Window:Tab({ Title = "颜色设置", Icon = "palette" }),
    Debug = Window:Tab({ Title = "调试修复", Icon = "wrench" }),
}

Window:SelectTab(1)

-- Roblox 服务
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LP = Players.LocalPlayer

-- 透视存储
local ESPObjects = {
    Doors = {},
    Players = {},
    Entities = {},
    Items = {},
    Coins = {},
    Models = {}
}

-- 开关
local DoorESPEnabled   = false
local PlayerESPEnabled = false
local EntityESPEnabled = false
local ItemESPEnabled   = false
local CoinESPEnabled   = false
local ModelESPEnabled  = false

-- 颜色配置
local Colors = {
    Door   = Color3.fromRGB(255, 0, 0),
    Player = Color3.fromRGB(0, 162, 255),
    Entity = Color3.fromRGB(255, 0, 0),
    Item   = Color3.fromRGB(0, 255, 0),
    Coin   = Color3.fromRGB(255, 255, 0),
    Model  = Color3.fromRGB(255, 128, 0),
}

-- 距离设置
local ESP_Distance = 100

-- 清理函数
local function clearESP(tbl)
    for i = #tbl, 1, -1 do
        local esp = tbl[i]
        if esp.gui then esp.gui:Destroy() end
        if esp.highlight then esp.highlight:Destroy() end
        table.remove(tbl, i)
    end
end

-- 创建文字 ESP
local function createESP(obj, tbl, color, text)
    if not obj or not obj.Parent then return end
    local root = obj:IsA("BasePart") and obj or obj.PrimaryPart or obj:FindFirstChildWhichIsA("BasePart")
    if not root then return end

    local dist = (LP.Character and LP.Character.PrimaryPart and (LP.Character.PrimaryPart.Position - root.Position).Magnitude) or 0
    if dist > ESP_Distance then return end

    local billboard = Instance.new("BillboardGui")
    billboard.Adornee = root
    billboard.Size = UDim2.new(0, 120, 0, 40)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.AlwaysOnTop = true
    billboard.MaxDistance = ESP_Distance * 1.5
    billboard.Parent = root

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 0.3
    label.BackgroundColor3 = Color3.new(0, 0, 0)
    label.Text = text
    label.TextColor3 = color
    label.TextStrokeTransparency = 0
    label.Font = Enum.Font.GothamBold
    label.TextScaled = true
    label.Parent = billboard

    table.insert(tbl, {object = obj, gui = billboard})
end

-- 创建高亮 ESP
local function createHighlightESP(obj, tbl, color)
    if not obj or not obj.Parent then return end
    local root = obj:IsA("BasePart") and obj or obj.PrimaryPart or obj:FindFirstChildWhichIsA("BasePart")
    if not root then return end

    local dist = (LP.Character and LP.Character.PrimaryPart and (LP.Character.PrimaryPart.Position - root.Position).Magnitude) or 0
    if dist > ESP_Distance then return end

    local highlight = Instance.new("Highlight")
    highlight.Adornee = obj
    highlight.FillColor = color
    highlight.OutlineColor = Color3.new(0, 0, 0)
    highlight.FillTransparency = 0.5
    highlight.OutlineTransparency = 0
    highlight.Parent = obj

    table.insert(tbl, {object = obj, highlight = highlight})
end

-- 类型判断
local function isDoor(obj)
    return obj:IsA("Model") and (obj.Name:lower():find("door") or obj:FindFirstChildOfClass("ProximityPrompt"))
end
local function isEntity(obj)
    if not obj:IsA("Model") then return false end
    if Players:GetPlayerFromCharacter(obj) then return false end
    return obj:FindFirstChildOfClass("Humanoid") and obj:FindFirstChild("Head")
end
local function isItem(obj)
    return obj:IsA("Model") and obj:FindFirstChildOfClass("ProximityPrompt") and obj:GetExtentsSize().Magnitude < 10
end
local function isCoin(obj)
    if obj:IsA("BasePart") then
        return obj.Color.r > 0.7 and obj.Color.g > 0.7 and obj.Color.b < 0.3 and obj.Size.Magnitude < 3
    end
    return false
end

-- 更新透视
local function updateESP()
    if DoorESPEnabled then
        clearESP(ESPObjects.Doors)
        for _, obj in ipairs(workspace:GetDescendants()) do
            if isDoor(obj) then createESP(obj, ESPObjects.Doors, Colors.Door, "门") end
        end
    else clearESP(ESPObjects.Doors) end

    if PlayerESPEnabled then
        clearESP(ESPObjects.Players)
        for _, p in ipairs(Players:GetPlayers()) do
            if p ~= LP and p.Character then
                createESP(p.Character, ESPObjects.Players, Colors.Player, p.Name)
            end
        end
    else clearESP(ESPObjects.Players) end

    if EntityESPEnabled then
        clearESP(ESPObjects.Entities)
        for _, obj in ipairs(workspace:GetDescendants()) do
            if isEntity(obj) then createESP(obj, ESPObjects.Entities, Colors.Entity, "实体") end
        end
    else clearESP(ESPObjects.Entities) end

    if ItemESPEnabled then
        clearESP(ESPObjects.Items)
        for _, obj in ipairs(workspace:GetDescendants()) do
            if isItem(obj) then createESP(obj, ESPObjects.Items, Colors.Item, "物品") end
        end
    else clearESP(ESPObjects.Items) end

    if CoinESPEnabled then
        clearESP(ESPObjects.Coins)
        for _, obj in ipairs(workspace:GetDescendants()) do
            if isCoin(obj) then createESP(obj, ESPObjects.Coins, Colors.Coin, "金币") end
        end
    else clearESP(ESPObjects.Coins) end

    if ModelESPEnabled then
        clearESP(ESPObjects.Models)
        for _, obj in ipairs(workspace:GetDescendants()) do
            if obj:IsA("Model") and obj.PrimaryPart then
                createHighlightESP(obj, ESPObjects.Models, Colors.Model)
            end
        end
    else clearESP(ESPObjects.Models) end
end

RunService.Heartbeat:Connect(updateESP)

-- === UI ===
Tabs.ESP:Toggle({ Title = "门透视", Value = false, Callback = function(v) DoorESPEnabled = v end })
Tabs.ESP:Toggle({ Title = "玩家透视", Value = false, Callback = function(v) PlayerESPEnabled = v end })
Tabs.ESP:Toggle({ Title = "实体透视", Value = false, Callback = function(v) EntityESPEnabled = v end })
Tabs.ESP:Toggle({ Title = "物品透视", Value = false, Callback = function(v) ItemESPEnabled = v end })
Tabs.ESP:Toggle({ Title = "金币透视", Value = false, Callback = function(v) CoinESPEnabled = v end })
Tabs.ESP:Toggle({ Title = "模型透视 (高亮)", Value = false, Callback = function(v) ModelESPEnabled = v end })

Tabs.ESP:Slider({
    Title = "透视距离",
    Description = "设置透视显示的最大距离",
    Default = 100, Min = 20, Max = 500,
    Callback = function(v) ESP_Distance = v end
})

-- === 颜色自定义面板 ===
Tabs.Colors:Colorpicker({ Title = "门颜色", Default = Colors.Door, Callback = function(c) Colors.Door = c end })
Tabs.Colors:Colorpicker({ Title = "玩家颜色", Default = Colors.Player, Callback = function(c) Colors.Player = c end })
Tabs.Colors:Colorpicker({ Title = "实体颜色", Default = Colors.Entity, Callback = function(c) Colors.Entity = c end })
Tabs.Colors:Colorpicker({ Title = "物品颜色", Default = Colors.Item, Callback = function(c) Colors.Item = c end })
Tabs.Colors:Colorpicker({ Title = "金币颜色", Default = Colors.Coin, Callback = function(c) Colors.Coin = c end })
Tabs.Colors:Colorpicker({ Title = "模型颜色", Default = Colors.Model, Callback = function(c) Colors.Model = c end })

-- 调试
Tabs.Debug:Button({
    Title = "清理所有透视",
    Callback = function()
        for _, tbl in pairs(ESPObjects) do clearESP(tbl) end
        WindUI:Notify({Title="调试", Content="已清理所有透视"})
    end
})

WindUI:Init()
WindUI:Notify("Doors 辅助工具", "脚本已加载成功！支持透视距离与颜色自定义")
