local WindUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/Footagesus/WindUI/main/dist/main.lua"))()

local Confirmed = false

WindUI:Popup({
    Title = "戊脚本doors",
    Icon = "rbxassetid://129260712070622",
    IconThemed = true,
    Content = "戊脚本doors点击进入\n",
    Buttons = {
        {
            Title = "进入脚本",
            Icon = "arrow-right",
            Callback = function() Confirmed = true end,
            Variant = "Primary",
        }
    }
})

repeat wait() until Confirmed

local Window = WindUI:CreateWindow({
    Title = "戊脚本doors",
    Icon = "rbxassetid://129260712070622",
    IconThemed = true,
    Author = "戊脚本doors by誓约",
    Folder = "DoorsScript",
    Size = UDim2.fromOffset(380, 270),
    Transparent = true,
    Theme = "Dark",
    User = { Enabled = true },
    SideBarWidth = 200,
    ScrollBarEnabled = true,
})

Window:Tag({
    Title = "v1.5",
    Color = Color3.fromHex("#30ff6a")
})
Window:Tag({
    Title = "Doors", 
    Color = Color3.fromHex("#315dff")
})

local Tabs = {
    Main = Window:Tab({ Title = "主要功能", Icon = "zap" }),
    ESP = Window:Tab({ Title = "透视功能", Icon = "eye" }),
    Auto = Window:Tab({ Title = "自动功能", Icon = "refresh-cw" }),
    Player = Window:Tab({ Title = "玩家修改", Icon = "user" }),
    Misc = Window:Tab({ Title = "其他功能", Icon = "settings" }),
    Debug = Window:Tab({ Title = "调试修复", Icon = "wrench" }),
}

Window:SelectTab(1)

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local ProximityPromptService = game:GetService("ProximityPromptService")

local LP = Players.LocalPlayer
local Character = LP.Character or LP.CharacterAdded:Wait()

-- 修复的透视系统
local ESPDebugMode = false
local ESPObjects = {
    Doors = {},
    Players = {},
    Entities = {},
    Items = {},
    Coins = {}
}

-- 自动互动系统
local AutoCollectEnabled = false
local AutoCollectCoins = false
local AutoCollectItems = false
local AutoCollectDistance = 20
local AutoCollectInterval = 0.5

-- 速度修改系统（绕过检测）
local SpeedHackEnabled = false
local OriginalWalkSpeed = 16
local CurrentWalkSpeed = 25
local SpeedBypassMethod = "BodyVelocity" -- "BodyVelocity", "CFrame", "Tween"

-- 改进的对象识别系统
local ObjectIdentifier = {
    -- 门识别
    isDoor = function(obj)
        if not obj:IsA("BasePart") and not obj:IsA("Model") then return false end
        
        local name = obj.Name:lower()
        local isDoor = name:find("door") or name:find("gate") or name:find("entrance")
        
        -- 检查门的特征
        if obj:IsA("Model") then
            local hasHinge = obj:FindFirstChild("Hinge") or obj:FindFirstChild("HingeConstraint")
            local hasHandle = obj:FindFirstChild("Handle") or obj:FindFirstChild("Knob")
            return isDoor or (hasHinge and hasHandle)
        end
        
        return isDoor
    end,
    
    -- 实体识别
    isEntity = function(obj)
        if not obj:IsA("Model") then return false end
        
        local name = obj.Name:lower()
        local entityNames = {
            "seek", "rush", "figure", "screech", "ambush", "halt", 
            "monster", "enemy", "creature", "entity"
        }
        
        for _, entityName in ipairs(entityNames) do
            if name:find(entityName) then return true end
        end
        
        -- 检查实体特征
        local hasHumanoid = obj:FindFirstChildOfClass("Humanoid")
        local hasHead = obj:FindFirstChild("Head")
        return hasHumanoid and hasHead and not Players:GetPlayerFromCharacter(obj)
    end,
    
    -- 可收集物品识别
    isCollectibleItem = function(obj)
        if not obj:IsA("BasePart") and not obj:IsA("Model") then return false end
        
        local name = obj.Name:lower()
        local itemNames = {
            "key", "lockpick", "medkit", "flashlight", "vitamin", "book",
            "item", "tool", "weapon", "potion", "health", "ammo", "battery"
        }
        
        for _, itemName in ipairs(itemNames) do
            if name:find(itemName) then return true end
        end
        
        -- 检查是否有可交互的提示
        local hasPrompt = obj:FindFirstChildWhichIsA("ProximityPrompt")
        return hasPrompt ~= nil
    end,
    
    -- 金币识别
    isCoin = function(obj)
        if not obj:IsA("BasePart") and not obj:IsA("Model") then return false end
        
        local name = obj.Name:lower()
        local coinNames = {"coin", "money", "currency", "gold", "cash", "dollar"}
        
        for _, coinName in ipairs(coinNames) do
            if name:find(coinName) then return true end
        end
        
        -- 检查金币特征（黄色、发光等）
        if obj:IsA("BasePart") then
            local isGoldColor = obj.Color.r > 0.7 and obj.Color.g > 0.7 and obj.Color.b < 0.3
            local hasSparkle = obj:FindFirstChild("Sparkles") or obj:FindFirstChild("PointLight")
            return isGoldColor or hasSparkle
        end
        
        return false
    end,
    
    -- 玩家识别
    isPlayer = function(obj)
        if not obj:IsA("Model") then return false end
        return Players:GetPlayerFromCharacter(obj) ~= nil and obj ~= LP.Character
    end
}

-- 改进的ESP创建函数
local function createESP(obj, espType, color, text)
    if not obj or not obj.Parent then return nil end
    
    local rootPart = obj:IsA("BasePart") and obj or 
                    (obj:FindFirstChild("HumanoidRootPart") or obj.PrimaryPart or obj:FindFirstChildWhichIsA("BasePart"))
    
    if not rootPart then return nil end
    
    -- 检查是否已存在ESP
    for _, espData in pairs(ESPObjects[espType]) do
        if espData.object == obj and espData.gui and espData.gui.Parent then
            return espData.gui -- 返回现有的ESP
        end
    end
    
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ESP_" .. espType
    billboard.Adornee = rootPart
    billboard.Size = UDim2.new(0, 100, 0, 40)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.AlwaysOnTop = true
    billboard.MaxDistance = 500
    billboard.Parent = rootPart
    
    local label = Instance.new("TextLabel")
    label.Text = text or espType
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = color
    label.TextStrokeTransparency = 0.3
    label.Font = Enum.Font.GothamBold
    label.TextSize = 14
    label.Parent = billboard
    
    -- 添加调试信息
    if ESPDebugMode then
        local debugLabel = Instance.new("TextLabel")
        debugLabel.Text = obj.Name
        debugLabel.Size = UDim2.new(1, 0, 0, 20)
        debugLabel.Position = UDim2.new(0, 0, 1, 0)
        debugLabel.BackgroundTransparency = 1
        debugLabel.TextColor3 = Color3.new(1, 1, 1)
        debugLabel.TextSize = 10
        debugLabel.Parent = billboard
    end
    
    local espData = {
        object = obj,
        gui = billboard,
        type = espType,
        created = tick()
    }
    
    table.insert(ESPObjects[espType], espData)
    return billboard
end

-- 自动互动功能
local function startAutoCollect()
    if not AutoCollectEnabled then return end
    
    local function collectObject(obj)
        if not obj or not obj.Parent then return false end
        
        -- 查找 proximity prompt
        local prompt = obj:FindFirstChildWhichIsA("ProximityPrompt")
        if not prompt then
            -- 如果是模型，检查其子部件
            if obj:IsA("Model") then
                for _, part in ipairs(obj:GetDescendants()) do
                    if part:IsA("ProximityPrompt") then
                        prompt = part
                        break
                    end
                end
            end
        end
        
        if prompt and prompt:IsA("ProximityPrompt") then
            -- 模拟触发提示
            fireproximityprompt(prompt)
            return true
        end
        
        return false
    end
    
    while AutoCollectEnabled do
        task.wait(AutoCollectInterval)
        
        if not Character or not Character.Parent then
            Character = LP.Character or LP.CharacterAdded:Wait()
        end
        
        local humanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
        if not humanoidRootPart then continue end
        
        local playerPos = humanoidRootPart.Position
        
        -- 收集金币
        if AutoCollectCoins then
            for _, obj in ipairs(workspace:GetDescendants()) do
                if ObjectIdentifier.isCoin(obj) then
                    local rootPart = obj:IsA("BasePart") and obj or 
                                   (obj:FindFirstChild("HumanoidRootPart") or obj.PrimaryPart or obj:FindFirstChildWhichIsA("BasePart"))
                    if rootPart and (playerPos - rootPart.Position).Magnitude <= AutoCollectDistance then
                        collectObject(obj)
                    end
                end
            end
        end
        
        -- 收集物品
        if AutoCollectItems then
            for _, obj in ipairs(workspace:GetDescendants()) do
                if ObjectIdentifier.isCollectibleItem(obj) then
                    local rootPart = obj:IsA("BasePart") and obj or 
                                   (obj:FindFirstChild("HumanoidRootPart") or obj.PrimaryPart or obj:FindFirstChildWhichIsA("BasePart"))
                    if rootPart and (playerPos - rootPart.Position).Magnitude <= AutoCollectDistance then
                        collectObject(obj)
                    end
                end
            end
        end
    end
end

-- 速度修改绕过系统
local SpeedBypassObjects = {}

local function applySpeedBypass()
    if not SpeedHackEnabled or not Character then return end
    
    local humanoid = Character:FindFirstChildOfClass("Humanoid")
    local humanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
    
    if not humanoid or not humanoidRootPart then return end
    
    -- 清除旧的绕过对象
    for _, obj in ipairs(SpeedBypassObjects) do
        if obj and obj.Parent then
            obj:Destroy()
        end
    end
    SpeedBypassObjects = {}
    
    -- 保存原始速度
    OriginalWalkSpeed = humanoid.WalkSpeed
    
    if SpeedBypassMethod == "BodyVelocity" then
        -- 方法1: 使用 BodyVelocity
        local bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.Velocity = humanoidRootPart.CFrame.LookVector * CurrentWalkSpeed
        bodyVelocity.MaxForce = Vector3.new(4000, 0, 4000)
        bodyVelocity.P = 1250
        bodyVelocity.Parent = humanoidRootPart
        table.insert(SpeedBypassObjects, bodyVelocity)
        
    elseif SpeedBypassMethod == "CFrame" then
        -- 方法2: 使用 CFrame 移动（更隐蔽）
        local moveConnection
        moveConnection = RunService.Heartbeat:Connect(function()
            if not SpeedHackEnabled or not Character or not Character.Parent then
                moveConnection:Disconnect()
                return
            end
            
            local moveDirection = humanoid.MoveDirection
            if moveDirection.Magnitude > 0 then
                local newPosition = humanoidRootPart.Position + (moveDirection * CurrentWalkSpeed * 0.033)
                humanoidRootPart.CFrame = CFrame.new(newPosition, newPosition + moveDirection)
            end
        end)
        table.insert(SpeedBypassObjects, moveConnection)
        
    elseif SpeedBypassMethod == "Tween" then
        -- 方法3: 使用 TweenService（最隐蔽）
        local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
        local lastMoveTime = 0
        
        local tweenConnection
        tweenConnection = RunService.Heartbeat:Connect(function()
            if not SpeedHackEnabled or not Character or not Character.Parent then
                tweenConnection:Disconnect()
                return
            end
            
            local moveDirection = humanoid.MoveDirection
            if moveDirection.Magnitude > 0 and tick() - lastMoveTime > 0.1 then
                local targetPosition = humanoidRootPart.Position + (moveDirection * 5)
                local tween = game:GetService("TweenService"):Create(
                    humanoidRootPart,
                    tweenInfo,
                    {CFrame = CFrame.new(targetPosition, targetPosition + moveDirection)}
                )
                tween:Play()
                lastMoveTime = tick()
            end
        end)
        table.insert(SpeedBypassObjects, tweenConnection)
    end
    
    -- 设置一个合理的原始速度以避免检测
    humanoid.WalkSpeed = math.random(14, 18)
end

local function removeSpeedBypass()
    for _, obj in ipairs(SpeedBypassObjects) do
        if obj then
            if typeof(obj) == "RBXScriptConnection" then
                obj:Disconnect()
            elseif obj.Parent then
                obj:Destroy()
            end
        end
    end
    SpeedBypassObjects = {}
    
    if Character then
        local humanoid = Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = OriginalWalkSpeed
        end
    end
end

-- 清理特定类型的ESP
local function clearESP(espType)
    for _, espData in ipairs(ESPObjects[espType]) do
        if espData.gui and espData.gui.Parent then
            espData.gui:Destroy()
        end
    end
    ESPObjects[espType] = {}
end

-- 清理所有ESP
local function clearAllESP()
    for espType, _ in pairs(ESPObjects) do
        clearESP(espType)
    end
end

-- 定期清理无效的ESP对象
local function cleanupInvalidESP()
    for espType, objects in pairs(ESPObjects) do
        for i = #objects, 1, -1 do
            local espData = objects[i]
            if not espData.object or not espData.object.Parent or not espData.gui or not espData.gui.Parent then
                if espData.gui then
                    espData.gui:Destroy()
                end
                table.remove(objects, i)
            end
        end
    end
end

-- 改进的ESP扫描系统
local function scanForObjects(espType, enabled, color, identifierFunc, displayName)
    if not enabled then return end
    
    local foundObjects = {}
    
    -- 扫描工作区中的对象
    for _, obj in ipairs(workspace:GetDescendants()) do
        if identifierFunc(obj) then
            createESP(obj, espType, color, displayName)
            table.insert(foundObjects, obj)
        end
    end
    
    return foundObjects
end

-- 门透视功能
local DoorESPEnabled = false
local ESP_SafeColor = Color3.fromRGB(0, 255, 0)
local ESP_DangerColor = Color3.fromRGB(255, 0, 0)

local function updateDoorESP()
    if not DoorESPEnabled then return end
    
    clearESP("Doors")
    
    for _, obj in ipairs(workspace:GetDescendants()) do
        if ObjectIdentifier.isDoor(obj) then
            local isSafe = obj.Name:lower():find("exit") or obj.Name:lower():find("safe")
            local color = isSafe and ESP_SafeColor or ESP_DangerColor
            createESP(obj, "Doors", color, isSafe and "真门" or "假门")
        end
    end
end

-- 玩家透视
local PlayerESPEnabled = false
local ESP_PlayerColor = Color3.fromRGB(0, 162, 255)

local function updatePlayerESP()
    if not PlayerESPEnabled then return end
    
    clearESP("Players")
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LP and player.Character then
            createESP(player.Character, "Players", ESP_PlayerColor, player.Name)
        end
    end
end

-- 实体透视
local EntityESPEnabled = false
local ESP_EntityColor = Color3.fromRGB(255, 0, 0)

local function updateEntityESP()
    if not EntityESPEnabled then return end
    
    clearESP("Entities")
    
    scanForObjects("Entities", true, ESP_EntityColor, ObjectIdentifier.isEntity, "实体")
end

-- 物品透视
local ItemESPEnabled = false
local ESP_ItemColor = Color3.fromRGB(0, 255, 0)

local function updateItemESP()
    if not ItemESPEnabled then return end
    
    clearESP("Items")
    
    scanForObjects("Items", true, ESP_ItemColor, ObjectIdentifier.isCollectibleItem, "物品")
end

-- 金币透视
local CoinESPEnabled = false
local ESP_CoinColor = Color3.fromRGB(255, 255, 0)

local function updateCoinESP()
    if not CoinESPEnabled then return end
    
    clearESP("Coins")
    
    scanForObjects("Coins", true, ESP_CoinColor, ObjectIdentifier.isCoin, "金币")
end

-- 自动清理和更新循环
local ESPUpdateConnection
local function startESPUpdateLoop()
    if ESPUpdateConnection then
        ESPUpdateConnection:Disconnect()
    end
    
    ESPUpdateConnection = RunService.Heartbeat:Connect(function()
        cleanupInvalidESP()
        
        if DoorESPEnabled then updateDoorESP() end
        if PlayerESPEnabled then updatePlayerESP() end
        if EntityESPEnabled then updateEntityESP() end
        if ItemESPEnabled then updateItemESP() end
        if CoinESPEnabled then updateCoinESP() end
        
        task.wait(1)
    end)
end

-- 自动互动功能标签页
Tabs.Auto:Toggle({
    Title = "启用自动收集",
    Description = "自动收集道具和金币",
    Value = false,
    Callback = function(value)
        AutoCollectEnabled = value
        if value then
            coroutine.wrap(startAutoCollect)()
        end
    end
})

Tabs.Auto:Toggle({
    Title = "自动收集金币",
    Description = "自动拾取金币",
    Value = false,
    Callback = function(value)
        AutoCollectCoins = value
    end
})

Tabs.Auto:Toggle({
    Title = "自动收集物品",
    Description = "自动拾取道具",
    Value = false,
    Callback = function(value)
        AutoCollectItems = value
    end
})

Tabs.Auto:Slider({
    Title = "收集距离",
    Description = "自动收集的最大距离",
    Default = 20,
    Min = 5,
    Max = 50,
    Callback = function(Value)
        AutoCollectDistance = Value
    end
})

Tabs.Auto:Slider({
    Title = "收集间隔",
    Description = "自动收集的间隔时间（秒）",
    Default = 0.5,
    Min = 0.1,
    Max = 2,
    Rounding = 1,
    Callback = function(Value)
        AutoCollectInterval = Value
    end
})

-- 玩家修改标签页
Tabs.Player:Toggle({
    Title = "速度修改（绕过）",
    Description = "使用绕过系统修改移动速度",
    Value = false,
    Callback = function(value)
        SpeedHackEnabled = value
        if value then
            applySpeedBypass()
        else
            removeSpeedBypass()
        end
    end
})

Tabs.Player:Slider({
    Title = "移动速度",
    Description = "设置移动速度（16-100）",
    Default = 25,
    Min = 16,
    Max = 100,
    Callback = function(Value)
        CurrentWalkSpeed = Value
        if SpeedHackEnabled then
            removeSpeedBypass()
            applySpeedBypass()
        end
    end
})

Tabs.Player:Dropdown({
    Title = "绕过方法",
    Description = "选择速度绕过方法",
    Values = {"BodyVelocity", "CFrame", "Tween"},
    Default = "BodyVelocity",
    Callback = function(Value)
        SpeedBypassMethod = Value
        if SpeedHackEnabled then
            removeSpeedBypass()
            applySpeedBypass()
        end
    end
})

Tabs.Player:Button({
    Title = "测试绕过效果",
    Description = "测试当前绕过方法的效果",
    Callback = function()
        if SpeedHackEnabled then
            WindUI:Notify({Title = "速度测试", Content = "正在测试速度绕过效果...", Duration = 2})
            
            -- 简单的前后移动测试
            local humanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                local startPos = humanoidRootPart.Position
                task.wait(1)
                local endPos = humanoidRootPart.Position
                local distance = (endPos - startPos).Magnitude
                
                WindUI:Notify({
                    Title = "速度测试结果", 
                    Content = string.format("移动距离: %.1f  studs\n估计速度: %.1f  studs/s", distance, distance),
                    Duration = 3
                })
            end
        else
            WindUI:Notify({Title = "错误", Content = "请先启用速度修改", Duration = 2})
        end
    end
})

-- 启动ESP更新循环
startESPUpdateLoop()

WindUI:Init()
WindUI:Notify("戊脚本Doors", "脚本已加载成功！")
